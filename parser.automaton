State 0:
## Known stack suffix:
##
## LR(1) items:
axiome' -> . axiome [ # ]
## Transitions:
-- On INPUTSYMBOLS shift to state 1
-- On inputsymbols shift to state 6
-- On declarations shift to state 19
-- On axiome shift to state 41
-- On automate shift to state 42
## Reductions:

State 1:
## Known stack suffix:
## INPUTSYMBOLS
## LR(1) items:
inputsymbols -> INPUTSYMBOLS . suiteLettresNonVide [ STACKSYMBOLS ]
## Transitions:
-- On SYMBOL shift to state 2
-- On suiteLettresNonVide shift to state 5
## Reductions:

State 2:
## Known stack suffix:
## SYMBOL
## LR(1) items:
suiteLettresNonVide -> SYMBOL . [ STATES STACKSYMBOLS INITIALSTATE ]
suiteLettresNonVide -> SYMBOL . COMMA suiteLettresNonVide [ STATES STACKSYMBOLS INITIALSTATE ]
## Transitions:
-- On COMMA shift to state 3
## Reductions:
-- On STATES STACKSYMBOLS INITIALSTATE
--   reduce production suiteLettresNonVide -> SYMBOL

State 3:
## Known stack suffix:
## SYMBOL COMMA
## LR(1) items:
suiteLettresNonVide -> SYMBOL COMMA . suiteLettresNonVide [ STATES STACKSYMBOLS INITIALSTATE ]
## Transitions:
-- On SYMBOL shift to state 2
-- On suiteLettresNonVide shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## SYMBOL COMMA suiteLettresNonVide
## LR(1) items:
suiteLettresNonVide -> SYMBOL COMMA suiteLettresNonVide . [ STATES STACKSYMBOLS INITIALSTATE ]
## Transitions:
## Reductions:
-- On STATES STACKSYMBOLS INITIALSTATE
--   reduce production suiteLettresNonVide -> SYMBOL COMMA suiteLettresNonVide

State 5:
## Known stack suffix:
## INPUTSYMBOLS suiteLettresNonVide
## LR(1) items:
inputsymbols -> INPUTSYMBOLS suiteLettresNonVide . [ STACKSYMBOLS ]
## Transitions:
## Reductions:
-- On STACKSYMBOLS
--   reduce production inputsymbols -> INPUTSYMBOLS suiteLettresNonVide

State 6:
## Known stack suffix:
## inputsymbols
## LR(1) items:
declarations -> inputsymbols . stacksymbols states initialstate initialstack [ TRANSITIONS ]
## Transitions:
-- On STACKSYMBOLS shift to state 7
-- On stacksymbols shift to state 9
## Reductions:

State 7:
## Known stack suffix:
## STACKSYMBOLS
## LR(1) items:
stacksymbols -> STACKSYMBOLS . suiteLettresNonVide [ STATES ]
## Transitions:
-- On SYMBOL shift to state 2
-- On suiteLettresNonVide shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## STACKSYMBOLS suiteLettresNonVide
## LR(1) items:
stacksymbols -> STACKSYMBOLS suiteLettresNonVide . [ STATES ]
## Transitions:
## Reductions:
-- On STATES
--   reduce production stacksymbols -> STACKSYMBOLS suiteLettresNonVide

State 9:
## Known stack suffix:
## inputsymbols stacksymbols
## LR(1) items:
declarations -> inputsymbols stacksymbols . states initialstate initialstack [ TRANSITIONS ]
## Transitions:
-- On STATES shift to state 10
-- On states shift to state 12
## Reductions:

State 10:
## Known stack suffix:
## STATES
## LR(1) items:
states -> STATES . suiteLettresNonVide [ INITIALSTATE ]
## Transitions:
-- On SYMBOL shift to state 2
-- On suiteLettresNonVide shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## STATES suiteLettresNonVide
## LR(1) items:
states -> STATES suiteLettresNonVide . [ INITIALSTATE ]
## Transitions:
## Reductions:
-- On INITIALSTATE
--   reduce production states -> STATES suiteLettresNonVide

State 12:
## Known stack suffix:
## inputsymbols stacksymbols states
## LR(1) items:
declarations -> inputsymbols stacksymbols states . initialstate initialstack [ TRANSITIONS ]
## Transitions:
-- On INITIALSTATE shift to state 13
-- On initialstate shift to state 15
## Reductions:

State 13:
## Known stack suffix:
## INITIALSTATE
## LR(1) items:
initialstate -> INITIALSTATE . SYMBOL [ INITIALSTACK ]
## Transitions:
-- On SYMBOL shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## INITIALSTATE SYMBOL
## LR(1) items:
initialstate -> INITIALSTATE SYMBOL . [ INITIALSTACK ]
## Transitions:
## Reductions:
-- On INITIALSTACK
--   reduce production initialstate -> INITIALSTATE SYMBOL

State 15:
## Known stack suffix:
## inputsymbols stacksymbols states initialstate
## LR(1) items:
declarations -> inputsymbols stacksymbols states initialstate . initialstack [ TRANSITIONS ]
## Transitions:
-- On INITIALSTACK shift to state 16
-- On initialstack shift to state 18
## Reductions:

State 16:
## Known stack suffix:
## INITIALSTACK
## LR(1) items:
initialstack -> INITIALSTACK . SYMBOL [ TRANSITIONS ]
## Transitions:
-- On SYMBOL shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## INITIALSTACK SYMBOL
## LR(1) items:
initialstack -> INITIALSTACK SYMBOL . [ TRANSITIONS ]
## Transitions:
## Reductions:
-- On TRANSITIONS
--   reduce production initialstack -> INITIALSTACK SYMBOL

State 18:
## Known stack suffix:
## inputsymbols stacksymbols states initialstate initialstack
## LR(1) items:
declarations -> inputsymbols stacksymbols states initialstate initialstack . [ TRANSITIONS ]
## Transitions:
## Reductions:
-- On TRANSITIONS
--   reduce production declarations -> inputsymbols stacksymbols states initialstate initialstack

State 19:
## Known stack suffix:
## declarations
## LR(1) items:
automate -> declarations . transitions [ EOF ]
## Transitions:
-- On TRANSITIONS shift to state 20
-- On transitions shift to state 40
## Reductions:

State 20:
## Known stack suffix:
## TRANSITIONS
## LR(1) items:
transitions -> TRANSITIONS . transList [ EOF ]
## Transitions:
-- On LPARE shift to state 21
-- On transition shift to state 37
-- On transList shift to state 39
## Reductions:
-- On EOF
--   reduce production transList ->

State 21:
## Known stack suffix:
## LPARE
## LR(1) items:
transition -> LPARE . SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On SYMBOL shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## LPARE SYMBOL
## LR(1) items:
transition -> LPARE SYMBOL . COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On COMMA shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## LPARE SYMBOL COMMA
## LR(1) items:
transition -> LPARE SYMBOL COMMA . lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On SYMBOL shift to state 24
-- On lettreOuVide shift to state 25
## Reductions:
-- On COMMA
--   reduce production lettreOuVide ->

State 24:
## Known stack suffix:
## SYMBOL
## LR(1) items:
lettreOuVide -> SYMBOL . [ COMMA ]
## Transitions:
## Reductions:
-- On COMMA
--   reduce production lettreOuVide -> SYMBOL

State 25:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide . COMMA SYMBOL COMMA SYMBOL COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On COMMA shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide COMMA
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide COMMA . SYMBOL COMMA SYMBOL COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On SYMBOL shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL . COMMA SYMBOL COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On COMMA shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA . SYMBOL COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On SYMBOL shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL . COMMA stack RPARE [ LPARE EOF ]
## Transitions:
-- On COMMA shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA . stack RPARE [ LPARE EOF ]
## Transitions:
-- On SYMBOL shift to state 31
-- On stack shift to state 34
-- On nonEmptyStack shift to state 36
## Reductions:
-- On RPARE
--   reduce production stack ->

State 31:
## Known stack suffix:
## SYMBOL
## LR(1) items:
nonEmptyStack -> SYMBOL . SEMICOLON nonEmptyStack [ RPARE ]
nonEmptyStack -> SYMBOL . [ RPARE ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On RPARE
--   reduce production nonEmptyStack -> SYMBOL

State 32:
## Known stack suffix:
## SYMBOL SEMICOLON
## LR(1) items:
nonEmptyStack -> SYMBOL SEMICOLON . nonEmptyStack [ RPARE ]
## Transitions:
-- On SYMBOL shift to state 31
-- On nonEmptyStack shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## SYMBOL SEMICOLON nonEmptyStack
## LR(1) items:
nonEmptyStack -> SYMBOL SEMICOLON nonEmptyStack . [ RPARE ]
## Transitions:
## Reductions:
-- On RPARE
--   reduce production nonEmptyStack -> SYMBOL SEMICOLON nonEmptyStack

State 34:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack . RPARE [ LPARE EOF ]
## Transitions:
-- On RPARE shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack RPARE
## LR(1) items:
transition -> LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack RPARE . [ LPARE EOF ]
## Transitions:
## Reductions:
-- On LPARE EOF
--   reduce production transition -> LPARE SYMBOL COMMA lettreOuVide COMMA SYMBOL COMMA SYMBOL COMMA stack RPARE

State 36:
## Known stack suffix:
## nonEmptyStack
## LR(1) items:
stack -> nonEmptyStack . [ RPARE ]
## Transitions:
## Reductions:
-- On RPARE
--   reduce production stack -> nonEmptyStack

State 37:
## Known stack suffix:
## transition
## LR(1) items:
transList -> transition . transList [ EOF ]
## Transitions:
-- On LPARE shift to state 21
-- On transition shift to state 37
-- On transList shift to state 38
## Reductions:
-- On EOF
--   reduce production transList ->

State 38:
## Known stack suffix:
## transition transList
## LR(1) items:
transList -> transition transList . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production transList -> transition transList

State 39:
## Known stack suffix:
## TRANSITIONS transList
## LR(1) items:
transitions -> TRANSITIONS transList . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production transitions -> TRANSITIONS transList

State 40:
## Known stack suffix:
## declarations transitions
## LR(1) items:
automate -> declarations transitions . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production automate -> declarations transitions

State 41:
## Known stack suffix:
## axiome
## LR(1) items:
axiome' -> axiome . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept axiome

State 42:
## Known stack suffix:
## automate
## LR(1) items:
axiome -> automate . EOF [ # ]
## Transitions:
-- On EOF shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## automate EOF
## LR(1) items:
axiome -> automate EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production axiome -> automate EOF

